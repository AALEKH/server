DROP TABLE if exists t1;
CREATE TABLE t1 (a INT NOT NULL PRIMARY KEY AUTO_INCREMENT, b VARCHAR(256), KEY SECOND(a, b)) ENGINE=INNODB;
optimize table t1;
Table	Op	Msg_type	Msg_text
test.t1	optimize	status	OK
INSERT INTO t1 VALUES (100000, REPEAT('A', 256));
INSERT INTO t1 VALUES (200000, REPEAT('A', 256));
INSERT INTO t1 VALUES (300000, REPEAT('A', 256));
INSERT INTO t1 VALUES (400000, REPEAT('A', 256));
optimize table t1;
Table	Op	Msg_type	Msg_text
test.t1	optimize	status	OK
create procedure defragment()
begin
set @i = 0;
repeat
set @i = @i + 1;
optimize table t1;
select sleep(5);
until @i = 3 end repeat;
end //
call defragment();
optimize table t1;
Table	Op	Msg_type	Msg_text
test.t1	optimize	status	OK
select count(*) from t1;
count(*)
7904
select count(*) < 145 from information_schema.innodb_buffer_page where table_name like '%t1%' and index_name = 'PRIMARY' order by page_number;
count(*) < 145
0
select count(*) from t1 force index (second);
count(*)
7904
select count(*) < 145 from information_schema.innodb_buffer_page where table_name like '%t1%' and index_name = 'second' order by page_number;
count(*) < 145
0
SET @@global.innodb_defragment_n_pages = 3;
optimize table t1;
Table	Op	Msg_type	Msg_text
test.t1	optimize	status	OK
select count(*) from t1;
count(*)
6904
select count(*) > 130 from information_schema.innodb_buffer_page where table_name like '%t1%' and index_name = 'PRIMARY' order by page_number;
count(*) > 130
1
select count(*) from t1 force index (second);
count(*)
6904
select count(*) > 100 from information_schema.innodb_buffer_page where table_name like '%t1%' and index_name = 'second' order by page_number;
count(*) > 100
1
SET @@global.innodb_defragment_n_pages = 10;
optimize table t1;
Table	Op	Msg_type	Msg_text
test.t1	optimize	status	OK
select count(*) from t1;
count(*)
6904
select count(*) < 150 from information_schema.innodb_buffer_page where table_name like '%t1%' and index_name = 'PRIMARY' order by page_number;
count(*) < 150
0
select count(*) from t1 force index (second);
count(*)
6904
DROP PROCEDURE defragment;
DROP TABLE t1;
